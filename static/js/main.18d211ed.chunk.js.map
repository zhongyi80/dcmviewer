{"version":3,"sources":["component/ImageViewer.js","App.js","reportWebVitals.js","index.js"],"names":["cornerstoneTools","cornerstone","cornerstoneMath","cornerstoneWebImageLoader","Hammer","ImageViewer","props","id","style","width","height","element","document","getElementById","then","image","React","Component","Header","Layout","Content","Sider","Footer","App","className","padding","float","size","icon","color","level","defaultSelectedKeys","mode","Item","title","ItemGroup","background","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sVAUAA,WAA0BC,YAAcA,EACxCD,WAA0BE,gBAAkBA,EAC5CC,WAAmCF,YAAcA,EACjDD,WAA0BI,OAASA,IAGnC,IAgCeC,E,kDA3BX,WAAYC,GAAQ,uCACVA,G,0CAGV,WACI,OAEE,aADE,CACF,gBACI,qBAAKC,GAAG,aAAaC,MAAO,CAACC,MAAO,QAAQC,OAAQ,e,+BAM9D,WAEI,IAAMC,EAAUC,SAASC,eAAe,cAExCZ,SAAmBU,GAEnBV,YAzBM,uGAyByBa,MAAK,SAASC,GACzCd,eAAyBU,EAASI,U,GAvBpBC,IAAMC,W,oCCbxBC,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,QAASC,EAAkBF,IAAlBE,MAAOC,EAAWH,IAAXG,OAgDjBC,MA9Cf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,eAACN,EAAD,CAAQV,MAAO,CAACiB,QAAQ,IAAxB,UACE,cAAC,IAAD,CAAQjB,MAAO,CAACkB,MAAM,SAAUC,KAAO,QAAQC,KAAK,SACpD,cAAC,IAAD,CAAOpB,MAAO,CAACqB,MAAM,SAAUC,MAAO,EAAtC,+BAEF,eAAC,IAAD,WAEA,cAACT,EAAD,UACE,eAAC,IAAD,CAAMU,oBAAqB,CAAC,aAAcC,KAAK,SAA/C,UACE,cAAC,IAAKC,KAAN,uBAAe,aAGf,cAAC,IAAD,CAASC,MAAM,aAAf,SACE,eAAC,IAAKC,UAAN,CAAgBD,MAAM,aAAtB,UACE,cAAC,IAAKD,KAAN,yBACA,cAAC,IAAKA,KAAN,mCASN,eAACb,EAAD,CAASZ,MAAO,CAACiB,QAAQ,UAAzB,UACE,cAAC,IAAWQ,KAAZ,4BACA,qBAAKzB,MAAO,CAAE4B,WAAW,OAAQX,QAAQ,GAAIY,UAAU,KAAvD,SACE,cAAC,EAAD,YAUN,cAACf,EAAD,2BCpCOgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.18d211ed.chunk.js","sourcesContent":["// Importing React\r\nimport React from 'react'\r\n// Importing all the dependencies for the Cornerstone library\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneMath from \"cornerstone-math\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport Hammer from \"hammerjs\";\r\nimport * as cornerstoneWebImageLoader from \"cornerstone-web-image-loader\";\r\n\r\n// Listing the dependencies for reference later\r\ncornerstoneTools.external.cornerstone = cornerstone;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath;\r\ncornerstoneWebImageLoader.external.cornerstone = cornerstone;\r\ncornerstoneTools.external.Hammer = Hammer;\r\n\r\n// The image, from a url, that we will be uploading and viewing with code below. \r\nlet imageId = 'https://rawgit.com/cornerstonejs/cornerstoneWebImageLoader/master/examples/Renal_Cell_Carcinoma.jpg';\r\n\r\n// Initiating a class component\r\nclass ImageViewer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // Any inherited properties could be referenced here\r\n    }\r\n    render() {\r\n        return (\r\n            // The <div> element reserved for the DICOM image \r\n          <div>              \r\n              <div id=\"dicomImage\" style={{width: \"512px\",height: \"512px\"}}></div>\r\n          </div>\r\n        );\r\n        }\r\n\r\n    //This is ran after the component has been inserted into the application's tree structure...basically when it is added to its parent element \r\n    componentDidMount() {\r\n        // The <div> element that was created above\r\n        const element = document.getElementById('dicomImage');\r\n        // Enabling the <div> so it can render the given image\r\n        cornerstone.enable(element);\r\n        // The custom image loader (from Cornerstone) that displays the image in the <div> element\r\n        cornerstone.loadImage(imageId).then(function(image) {\r\n            cornerstone.displayImage(element, image);\r\n        });\r\n    }    \r\n}\r\n\r\n// Exporting the component so it can be referenced in the parent component\r\nexport default ImageViewer","import { Avatar,Layout, Menu, Breadcrumb } from 'antd';\nimport './App.css';\n//import DicomViewer from \"./dicom-viewer\";\nimport ImageViewer from './component/ImageViewer'\nimport Title from 'antd/lib/typography/Title';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nconst { Header, Content, Sider, Footer } = Layout;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Header style={{padding:10}}>\n          <Avatar style={{float:'right'}} size = \"small\" icon=\"user\"  ></Avatar>\n          <Title style={{color:'white'}} level={3}> CMB Detection</Title>        \n        </Header>\n        <Layout>\n        \n        <Sider>\n          <Menu defaultSelectedKeys={['Dashboard']} mode='inline'>\n            <Menu.Item key='Dashboard'>\n              Dashboard\n            </Menu.Item>\n            <SubMenu title='Study list'>\n              <Menu.ItemGroup title='Study list'>\n                <Menu.Item>show list1</Menu.Item>\n                <Menu.Item>view study</Menu.Item>\n              </Menu.ItemGroup>\n            </SubMenu>\n            \n\n          </Menu>\n        </Sider>\n        \n          \n          <Content style={{padding:'0 50px'}}>\n            <Breadcrumb.Item>Patient Study</Breadcrumb.Item>\n            <div style={{ background:'#fff', padding:24, minHeight:580}}>\n              <ImageViewer />\n            \n            </div>\n            \n\n            \n          </Content>\n         \n         \n        </Layout>\n        <Footer>Footer</Footer>\n    </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}